<?php

function stdh_menu() {
  $items['admin/stdh'] = array(
    'title' => t('Students Info'),
    'access arguments' => array('administer stdh'),
    'type' => MENU_NORMAL_ITEM,
  );


  $items['admin/stdh/applications'] = array(
    'title' => t('Students Applications'),
    'page callback' => 'stdh_get_students_applications',
    'access arguments' => array('administer stdh'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/stdh/payments'] = array(
    'title' => t('Students Payments'),
    'page callback' => 'stdh_get_students_payment',
    'access arguments' => array('administer stdh'),
    'type' => MENU_NORMAL_ITEM,
  );
 
  return $items;
}


/*
 * Implementation of hook_permission
 */

function stdh_permission() {
  return array(
    'administer stdh' => array(
      'title' => t('Administer stdh'),
    ),
        'administer paypal' => array(
      'title' => 'Administer PayPal',
      'description' => 'View and modify PayPal Settings and payments.'
    )
   
  );
}
/**
 * Return vacancy applications page.
 */
function stdh_get_students_applications() {
  return views_embed_view('students_applications', 'main_block');
}
function stdh_get_students_payment() {
  return views_embed_view('payments', 'administration_page');
}








function stdh_form_alter(&$form, &$form_state, $form_id) {
//print_r($form['#id']);
//   print '<pre>';
//  print_r($form);
//  print '</pre>';
    $pos = strpos($form_id, "webform_client_form");
  if ($pos !== FALSE) {
    foreach (element_children($form['submitted']) as $element) {
      if (isset($form['submitted'][$element]['#title']))
        $form['submitted'][$element]['#title'] = t($form['submitted'][$element]['#title']);
    }
    if (isset($form['title']['#title'])) {
      $form['title']['#title'] = t($form['title']['#title']);
    }
    
}

 if (isset($form['#node']->type) && ($form['#node']->type == 'webform')) {
if ($form['#id']== 'webform-client-form-64'){
     //print_r($form);
    foreach ($form["submitted"] as $key => $value) {
      switch ($value["#type"]) {
        case 'textfield':
        case 'textarea':
        case 'webform_email':
          $form["submitted"][$key]['#attributes']["placeholder"] = $value["#title"];
          break;
      } 
    }
  }
}
 //break;

     if ($form['#id']== 'user_login'){
     //print_r($form);
    $form['name']['#description']="";
      $form['pass']['#description']="";
      $items = array();
      $items[] = l(t('Request new password'), 'user/password', 
              array('attributes' => array('title' => t('Request new password via e-mail.'))));
      $form['links'] = array('#markup' => theme('item_list', array('items' => $items)), '#weight' => 200);
      }
      
      
        switch ($form_id) {
    case 'register_university_node_form':
         drupal_set_title(t('Select University'));
      $form['title']['#default_value'] = 'New ';
          $form['title']['#access'] = 0;
          $form['language']['#access'] = 0;
          $form['#prefix']='<div class="container"><div class="col-sm-6">';
          $form['#suffix']='</div></div>
           <div class="f-left text">الخطوة التالية</div>
         <div class="btn btn-circle btn-lg f-left"> إختيار الخدمات</div>';
    $form['field_universiry']['und']['#options']['_none'] = t('Select University');
     $form['actions']['submit']['#value'] = t('Next');
      $form['actions']['submit']['#submit'][] = 'stdh_register_university_submit';
      break;
    case 'application_node_form';
         // print_r($form);
         
           $form['#prefix']='<div class="container"><div class="col-sm-6">';
          $form['#suffix']='</div></div>
        <div class="f-left text">الخطوة التالية</div>
         <div class="btn btn-circle btn-lg f-left"> إختيار الجامعة</div>';
              
          $form['title']['#default_value'] = 'New Application';
          $form['title']['#access'] = 0;
          $form['language']['#access'] = 0;
           $form['actions']['submit']['#value'] = t('Next');
           $form['actions']['submit']['#submit'][] = 'stdh_application_submit';
             
      break;
  case 'single_service_node_form';
     //print_r($form);
    
   $form['#prefix']='<div class="container"><div class="col-sm-6">';
          $form['#suffix']='</div></div>
         <div class="f-left text">الخطوة التالية</div>
         <div class="btn btn-circle btn-lg f-left"> الدفعة الاولى</div><div class="btn btn-test-universities btn-lg total-count"><a href="/service-cal" target="_blank">حاسبة الخدمات</a></div>';
          $form['title']['#default_value'] = 'New Service';
          $form['title']['#access'] = 0;
          $form['language']['#access'] = 0;
          $form['actions']['submit']['#value'] = t('Next');
          $form['actions']['submit']['#submit'][] = 'stdh_service_submit';
          $form['field_secure_flight_reservations']['und']['#options']['_none'] = '';
          $form['field_secure_flight_reservations']['und']['#type'] = 'checkboxes';

          $form['field_university_admission']['und']['#options']['_none'] = '';
          $form['field_university_admission']['und']['#type'] = 'checkboxes';
          $form['field_reception_airport']['und']['#options']['_none'] = '';
          $form['field_reception_airport']['und']['#type'] = 'checkboxes';

          $form['field_inner_accommodation']['und']['#options']['_none'] = '';
          $form['field_inner_accommodation']['und']['#type'] = 'checkboxes';
          $form['field_introductory_lecture']['und']['#options']['_none'] = '';
          $form['field_introductory_lecture']['und']['#type'] = 'checkboxes';
          $form['field_exam_center_guidance']['und']['#options']['_none'] = '';
          $form['field_exam_center_guidance']['und']['#type'] = 'checkboxes';
          $form['field_service_bundle']['und']['#options']['_none'] = '';
          $form['field_service_bundle']['#suffix']='<div class="divider"></div><hr>';
       
          $form['field_issuance_of_residence']['und']['#type'] = 'checkboxes';
          $form['field_complete_registration']['und']['#type'] = 'checkboxes';
          $form['field_tour']['und']['#type'] = 'checkboxes';
          $form['field_completion_of_the_registra']['und']['#type'] = 'checkboxes';
          $form['field_turkish_course']['und']['#type'] = 'checkboxes';
          $form['field_bank_account']['und']['#type'] = 'checkboxes';
 $form['field_educational_tour']['und']['#type'] = 'checkboxes';

	
 



	
 
	
 
		
 
	
		
          	
 
	

          
   
  break;
  case 'fixed_payment_node_form';
       $form['#prefix']='<div class="container">';
           $form['#prefix']='<div class="col-sm-6">';
          $form['#suffix']='</div>';
          $form['#suffix']='</div>';
       $form['title']['#default_value'] = 'Payment at ' . date('d/m/Y H:i:s', time());
          $form['title']['#access'] = 0;
          $form['actions']['submit']['#value'] = t('Next');
        
                  
       break;
     case 'payment_node_form';
       $form['#prefix']='<div class="container">';
           $form['#prefix']='<div class="col-sm-6">';
          $form['#suffix']='</div>';
          $form['#suffix']='</div>';
       $form['title']['#default_value'] = 'Payment at ' . date('d/m/Y H:i:s', time());
          $form['title']['#access'] = 0;
          $form['actions']['submit']['#value'] = t('Next');
        
                  
       break;
        }
      
       
      
      
      }
      
      
      
      
  function stdh_application_submit($form, &$form_state) {


  $form_state['redirect'] = 'choose-university';
      }
       function stdh_register_university_submit($form, &$form_state) {


  $form_state['redirect'] = 'choose-service';
      }
        function stdh_service_submit($form, &$form_state) {


  $form_state['redirect'] = 'first-payment';
      }
      

      
    //  stdh_register_university_submit
function stdh_form_user_register_form_alter(&$form, &$form_state, $form_id) {
// 
//  $form['#theme'] = 'user_register';
  $form['actions']['submit']['#value'] = t('REGISTER');
  $form['account']['mail']['#title'] = t('E-mail');
  
  
}
//function stdh_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
////      print '<pre>';
////  print_r($form);
////  print '</pre>';
//  $form['locale']['#prefix'] = '<div class="localhidden">';
//  $form['locale']['#suffix'] = '</div>';
//  $form['timezone']['#prefix'] = '<div class="timezonehidden">';
//  $form['timezone']['#suffix'] = '</div>';
// // $form['locale']['#access'] = FALSE;
////  unset($form['locale']); 
//   $form['contact']['#title'] = '';
// $form['contact']['#collapsible'] = FALSE;
//
//  $form['locale']['#collapsible'] = FALSE;
// $form['#submit'][] = 'stdh_user_profile_form_submit';
//
//}



 
//
//function stdh_user_profile_form_submit($form, &$form_state) {
//  global $user;
//  drupal_goto('user/' . $user->uid);
//}

function stdh_schema_alter(&$schema) {
  // Add field to existing schema.
  $schema ['paymentform']['fields']['description'] = array(
   
    'not null' => FALSE,
    'default' => 'new',
    'description' => 'Per-user timezone configuration.',
  );
}



   ?>
