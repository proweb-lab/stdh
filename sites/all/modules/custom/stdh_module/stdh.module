<?php

function stdh_menu() {


  $items['admin/stdh/applications'] = array(
    'title' => t('Students Applications'),
    'page callback' => 'stdh_get_students_applications',
    'access arguments' => array('administer stdh'),
    'type' => MENU_NORMAL_ITEM,
  );
 


  return $items;
}
/*
 * Implementation of hook_permission
 */

function stdh_permission() {
  return array(
    'administer stdh' => array(
      'title' => t('Administer stdh'),
    ),
   
  );
}
/**
 * Return vacancy applications page.
 */
function stdh_get_students_applications() {
  return views_embed_view('students_applications', 'main_block');
}







function stdh_form_alter(&$form, &$form_state, $form_id) {
//print_r($form['#id']);
//   print '<pre>';
//  print_r($form);
//  print '</pre>';
    $pos = strpos($form_id, "webform_client_form");
  if ($pos !== FALSE) {
    foreach (element_children($form['submitted']) as $element) {
      if (isset($form['submitted'][$element]['#title']))
        $form['submitted'][$element]['#title'] = t($form['submitted'][$element]['#title']);
    }
    if (isset($form['title']['#title'])) {
      $form['title']['#title'] = t($form['title']['#title']);
    }
    
}

 if (isset($form['#node']->type) && ($form['#node']->type == 'webform')) {
if ($form['#id']== 'webform-client-form-64'){
     //print_r($form);
    foreach ($form["submitted"] as $key => $value) {
      switch ($value["#type"]) {
        case 'textfield':
        case 'textarea':
        case 'webform_email':
          $form["submitted"][$key]['#attributes']["placeholder"] = $value["#title"];
          break;
      } 
    }
  }
}
 //break;

     if ($form['#id']== 'user_login'){
     //print_r($form);
    $form['name']['#description']="";
      $form['pass']['#description']="";
      $items = array();
      $items[] = l(t('Request new password'), 'user/password', 
              array('attributes' => array('title' => t('Request new password via e-mail.'))));
      $form['links'] = array('#markup' => theme('item_list', array('items' => $items)), '#weight' => 200);
      }
      
      
        switch ($form_id) {
    case 'register_university_node_form':
      $form['title']['#default_value'] = 'New ';
          $form['title']['#access'] = 0;
    $form['field_universiry']['und']['#options']['_none'] = t('Select University');
     $form['actions']['submit']['#value'] = t('Next');
      $form['actions']['submit']['#submit'][] = 'stdh_register_university_submit';
      break;
    case 'application_node_form';
              $form['title']['#default_value'] = 'New Application';
          $form['title']['#access'] = 0;
          $form['language']['#access'] = 0;
           $form['actions']['submit']['#value'] = t('Next');
           $form['actions']['submit']['#submit'][] = 'stdh_application_submit';
             
      break;
  case 'single_service_node_form';
    //  print_r($form);
          $form['title']['#default_value'] = 'New Service';
          $form['title']['#access'] = 0;
          $form['language']['#access'] = 0;
          $form['actions']['submit']['#value'] = t('Next');
          //$form['actions']['submit']['#submit'][] = 'stdh_application_submit';
$form['field_flight_reservation']['und']['#options']['_none'] = '';
$form['field_flight_reservation']['und']['#type'] = 'checkboxes';
 //  field_flight_reservation

$form['field_university_admission']['und']['#options']['_none'] = '';
$form['field_university_admission']['und']['#type'] = 'checkboxes';
$form['field_reception_airport']['und']['#options']['_none'] = '';
$form['field_reception_airport']['und']['#type'] = 'checkboxes';

$form['field_inner_accommodation']['und']['#options']['_none'] = '';
$form['field_inner_accommodation']['und']['#type'] = 'checkboxes';
$form['field_introductory_lecture']['und']['#options']['_none'] = '';
$form['field_introductory_lecture']['und']['#type'] = 'checkboxes';
$form['field_exam_center_guidance']['und']['#options']['_none'] = '';
$form['field_exam_center_guidance']['und']['#type'] = 'checkboxes';

        }
      
       
      
      
      }
      
      
      
      
  function stdh_application_submit($form, &$form_state) {


  $form_state['redirect'] = 'select-university';
      }
       function stdh_register_university_submit($form, &$form_state) {


  $form_state['redirect'] = 'select-service';
      }

      
    //  stdh_register_university_submit
function stdh_form_user_register_form_alter(&$form, &$form_state, $form_id) {
 
  $form['#theme'] = 'user_register';
  $form['actions']['submit']['#value'] = t('REGISTER');
  $form['account']['mail']['#title'] = t('E-mail');
  
  
}
function stdh_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
//      print '<pre>';
//  print_r($form);
//  print '</pre>';
  $form['locale']['#prefix'] = '<div class="localhidden">';
  $form['locale']['#suffix'] = '</div>';
  $form['timezone']['#prefix'] = '<div class="timezonehidden">';
  $form['timezone']['#suffix'] = '</div>';
 // $form['locale']['#access'] = FALSE;
//  unset($form['locale']); 
   $form['contact']['#title'] = '';
 $form['contact']['#collapsible'] = FALSE;

  $form['locale']['#collapsible'] = FALSE;
 $form['#submit'][] = 'stdh_user_profile_form_submit';

}



 

function stdh_user_profile_form_submit($form, &$form_state) {
  global $user;
  drupal_goto('user/' . $user->uid);
}


//
//function getNew_form($node_type) {
//  global $user;
// // $form_state = array();
////  form_load_include($form_state, "inc", "node", "node.pages");
////  $form = node_add($node_type);
////  return drupal_render($form);
////  
// $nodeNew = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => $node_type, 'language' => LANGUAGE_NONE);
// $form_state['build_info']['args'] = array($nodeNew);
//  form_load_include($form_state, 'inc', 'node', 'node.pages');
// $form = drupal_get_form($node_type . '_node_form', $nodeNew);
// return drupal_render($form);


function getNew_form($node_type) {
global $user;
  $form_state = array();
  form_load_include($form_state, "inc", "node", "node.pages");
  $form = node_add($node_type);
  return drupal_render($form);
  
//  $nodeNew = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => $node_type, 'language' => LANGUAGE_NONE);
//  $form_state['build_info']['args'] = array($nodeNew);
//  form_load_include($form_state, 'inc', 'node', 'node.pages');
//  $form = drupal_get_form($node_type . '_node_form', $nodeNew);
//  return drupal_render($form);
}



   ?>

