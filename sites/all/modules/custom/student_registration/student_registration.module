<?php
/**
 * 
 * Implementation of hook_menu
 */
function student_registration_menu() {
  $items = array();

  $items['/register/member'] = array(
    'title' => t('REGISTRATION - Student'),
    'description' => t('Student Registration'),
    'page callback' => '_student_register_member',
    'access callback' => 'student_registration_access',
  );
  $items['/register/success'] = array(
    'title' => t('REGISTRATION '),
    'description' => t('User Registration'),
    'page callback' => '_student_register_success',
    'access callback' => 'student_registration_access',
  );
  return $items;
}
/**
 * 
 * Menu Call back bilbaal/register/member
 */
function _student_register_member() {
  $output = '';
  $output .= render(drupal_get_form('student_member_registration_form'));
  return $output;
}
/**
 * 
 * Implementation of hook_form
 */
function student_member_registration_form($form, $form_state) {
  if (!isset($form_state['stage'])) $form_state['stage'] = 'account';
  $form = array('#attributes' => array('class' => array('registration-form')));
  $form = _member_registration_get_header($form, $form_state);
  
  switch ($form_state['stage']){
    case 'account':
      $form['registration_steps'] = array('#markup' => '<div class="registration-steps account"></div>');
      return _registration_account_form($form, $form_state);
      break;
    case 'detailed':
      $form['registration_steps'] = array('#markup' => '<div class="registration-steps detailed"></div>');
      return _member_registration_detailed_form($form, $form_state);
      break;
  }
}
function student_member_registration_form_validate($form, &$form_state) {
  if ($form_state['triggering_element']['#value'] == t('Back')) {
    return;
  }
  if ($form_state['triggering_element']['#value'] == t('Cancel')) {
    drupal_goto('<front>');
  }
  
  switch ($form_state['stage']) {
    case 'account':
      if (!filter_var($form_state['values']['email'], FILTER_VALIDATE_EMAIL)) {
        form_set_error('email', t('Please enter a valid email address.'));
      }
      else{
        if ($user = user_load_by_name($form_state['values']['email'])) {
          form_set_error('email', t('Email is already registered.'));
        }
      }
      if ($form_state['values']['password'] != $form_state['values']['re_password']) {
        form_set_error('password', t('Password does not match.'));
      }
      break;
 
  }
}